2023-05-10 21:58:07,973{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w unique-ids --bin ../maelstrom-echo/target/debug/maelstrom-echo --time-limit 30 --rate 1000 --node-count 3 --availability total --nemesis partition
2023-05-10 21:58:08,027{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 3
 :availability :total
 :max-txn-length 4
 :concurrency 3
 :db
 #object[maelstrom.db$db$reify__16142
         "0x68f67bbd"
         "maelstrom.db$db$reify__16142@68f67bbd"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "unique-ids"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x4a03c4bc" "2023-05-10T21:58:07.959-04:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x3d0c88f4"
         "maelstrom.net$jepsen_net$reify__15251@3d0c88f4"]
 :client
 #object[maelstrom.workload.unique_ids$client$reify__20074
         "0x5aad4194"
         "maelstrom.workload.unique_ids$client$reify__20074@5aad4194"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x50a1c2f3"
         "java.util.concurrent.CyclicBarrier@50a1c2f3"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 1000.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x453ca7f"
         "jepsen.checker$compose$reify__11881@453ca7f"]
 :argv
 ("test"
  "-w"
  "unique-ids"
  "--bin"
  "../maelstrom-echo/target/debug/maelstrom-echo"
  "--time-limit"
  "30"
  "--rate"
  "1000"
  "--node-count"
  "3"
  "--availability"
  "total"
  "--nemesis"
  "partition")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@5d41b929"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@6dd0e2f4"]})
 :nodes ["n0" "n1" "n2"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "../maelstrom-echo/target/debug/maelstrom-echo"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 30000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x4ce66169"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@4ce66169"],
                   :gen (jepsen.generator.Stagger
                         {:dt 20000000000,
                          :next-time nil,
                          :gen (jepsen.generator.FlipFlop
                                {:gens [#object[jepsen.nemesis.combined$partition_package$start__16420
                                                "0x53d0cf4d"
                                                "jepsen.nemesis.combined$partition_package$start__16420@53d0cf4d"]
                                        ({:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         ...)],
                                 :i 0})})})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0xd7645b2"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@d7645b2"],
                   :gen (jepsen.generator.Stagger
                         {:dt 2000000,
                          :next-time nil,
                          :gen (jepsen.generator.Repeat
                                {:remaining -1, :gen {:f :generate}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x72e4905c"
         "maelstrom.net$jepsen_os$reify__15254@72e4905c"]
 :time-limit 30
 :workload :unique-ids
 :consistency-models [:strict-serializable]
 :topology :grid}

2023-05-10 21:58:09,479{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2023-05-10 21:58:09,480{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2023-05-10 21:58:09,482{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2023-05-10 21:58:09,482{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2023-05-10 21:58:09,482{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2023-05-10 21:58:09,483{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ../maelstrom-echo/target/debug/maelstrom-echo []
2023-05-10 21:58:09,483{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ../maelstrom-echo/target/debug/maelstrom-echo []
2023-05-10 21:58:09,484{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2023-05-10 21:58:09,485{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2023-05-10 21:58:09,486{GMT}	INFO	[jepsen node n0] maelstrom.process: launching ../maelstrom-echo/target/debug/maelstrom-echo []
2023-05-10 21:58:09,502{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2023-05-10 21:58:09,514{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:generate	nil
2023-05-10 21:58:09,514{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:generate	nil
2023-05-10 21:58:09,514{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:start-partition	:one
2023-05-10 21:58:09,515{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:generate	nil
2023-05-10 21:58:09,518{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:start-partition	[:isolated {"n1" #{"n2" "n0"}, "n2" #{"n1"}, "n0" #{"n1"}}]
2023-05-10 21:58:09,534{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 2 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 1}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 1,
 :in_reply_to 1,
 :node_id nil,
 :echo nil,
 :id 8589934592}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,534{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 1 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 1}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 1,
 :in_reply_to 1,
 :node_id nil,
 :echo nil,
 :id 4294967296}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,534{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 0 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 1}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 1,
 :in_reply_to 1,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,537{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:generate	nil
2023-05-10 21:58:09,537{GMT}	INFO	[jepsen worker 1] jepsen.util: 4	:invoke	:generate	nil
2023-05-10 21:58:09,538{GMT}	INFO	[jepsen worker 2] jepsen.util: 5	:invoke	:generate	nil
2023-05-10 21:58:09,547{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 3 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 2}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 2,
 :in_reply_to 2,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,548{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:generate	nil
2023-05-10 21:58:09,549{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 4 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 2}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 2,
 :in_reply_to 2,
 :node_id nil,
 :echo nil,
 :id 8589934592}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,550{GMT}	INFO	[jepsen worker 1] jepsen.util: 7	:invoke	:generate	nil
2023-05-10 21:58:09,550{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 5 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 2}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 2,
 :in_reply_to 2,
 :node_id nil,
 :echo nil,
 :id 17179869184}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,552{GMT}	INFO	[jepsen worker 2] jepsen.util: 8	:invoke	:generate	nil
2023-05-10 21:58:09,562{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 6 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 3}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 3,
 :in_reply_to 3,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,562{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 7 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 3}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 3,
 :in_reply_to 3,
 :node_id nil,
 :echo nil,
 :id 17179869184}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,563{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:invoke	:generate	nil
2023-05-10 21:58:09,563{GMT}	INFO	[jepsen worker 1] jepsen.util: 10	:invoke	:generate	nil
2023-05-10 21:58:09,563{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 8 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 3}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 3,
 :in_reply_to 3,
 :node_id nil,
 :echo nil,
 :id 34359738368}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,565{GMT}	INFO	[jepsen worker 2] jepsen.util: 11	:invoke	:generate	nil
2023-05-10 21:58:09,572{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 9 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 4}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 4,
 :in_reply_to 4,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,573{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:generate	nil
2023-05-10 21:58:09,573{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 10 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 4}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 4,
 :in_reply_to 4,
 :node_id nil,
 :echo nil,
 :id 34359738368}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,573{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 11 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 4}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 4,
 :in_reply_to 4,
 :node_id nil,
 :echo nil,
 :id 68719476736}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,575{GMT}	INFO	[jepsen worker 2] jepsen.util: 14	:invoke	:generate	nil
2023-05-10 21:58:09,575{GMT}	INFO	[jepsen worker 1] jepsen.util: 13	:invoke	:generate	nil
2023-05-10 21:58:09,580{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 12 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 5}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 5,
 :in_reply_to 5,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,581{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:generate	nil
2023-05-10 21:58:09,582{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 13 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 5}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 5,
 :in_reply_to 5,
 :node_id nil,
 :echo nil,
 :id 68719476736}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,583{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 14 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 5}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 5,
 :in_reply_to 5,
 :node_id nil,
 :echo nil,
 :id 137438953472}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,583{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:invoke	:generate	nil
2023-05-10 21:58:09,584{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:invoke	:generate	nil
2023-05-10 21:58:09,587{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 15 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 6}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 6,
 :in_reply_to 6,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,588{GMT}	INFO	[jepsen worker 0] jepsen.util: 18	:invoke	:generate	nil
2023-05-10 21:58:09,591{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 17 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 6}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 6,
 :in_reply_to 6,
 :node_id nil,
 :echo nil,
 :id 274877906944}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,592{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 16 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 6}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 6,
 :in_reply_to 6,
 :node_id nil,
 :echo nil,
 :id 137438953472}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,592{GMT}	INFO	[jepsen worker 1] jepsen.util: 19	:invoke	:generate	nil
2023-05-10 21:58:09,593{GMT}	INFO	[jepsen worker 2] jepsen.util: 20	:invoke	:generate	nil
2023-05-10 21:58:09,595{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 18 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 7}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 7,
 :in_reply_to 7,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,596{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:generate	nil
2023-05-10 21:58:09,600{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 19 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 7}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 7,
 :in_reply_to 7,
 :node_id nil,
 :echo nil,
 :id 274877906944}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,600{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 20 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 7}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 7,
 :in_reply_to 7,
 :node_id nil,
 :echo nil,
 :id 549755813888}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,601{GMT}	INFO	[jepsen worker 1] jepsen.util: 22	:invoke	:generate	nil
2023-05-10 21:58:09,602{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 21 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 8}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 8,
 :in_reply_to 8,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,603{GMT}	INFO	[jepsen worker 0] jepsen.util: 24	:invoke	:generate	nil
2023-05-10 21:58:09,605{GMT}	INFO	[jepsen worker 2] jepsen.util: 23	:invoke	:generate	nil
2023-05-10 21:58:09,607{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 22 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 8}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 8,
 :in_reply_to 8,
 :node_id nil,
 :echo nil,
 :id 549755813888}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,608{GMT}	INFO	[jepsen worker 1] jepsen.util: 25	:invoke	:generate	nil
2023-05-10 21:58:09,610{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 23 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 8}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 8,
 :in_reply_to 8,
 :node_id nil,
 :echo nil,
 :id 1099511627776}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,611{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 24 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 9}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 9,
 :in_reply_to 9,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,612{GMT}	INFO	[jepsen worker 2] jepsen.util: 26	:invoke	:generate	nil
2023-05-10 21:58:09,614{GMT}	INFO	[jepsen worker 0] jepsen.util: 27	:invoke	:generate	nil
2023-05-10 21:58:09,615{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 25 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 9}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 9,
 :in_reply_to 9,
 :node_id nil,
 :echo nil,
 :id 1099511627776}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,616{GMT}	INFO	[jepsen worker 1] jepsen.util: 28	:invoke	:generate	nil
2023-05-10 21:58:09,618{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 26 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 9}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 9,
 :in_reply_to 9,
 :node_id nil,
 :echo nil,
 :id 2199023255552}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,618{GMT}	INFO	[jepsen worker 2] jepsen.util: 29	:invoke	:generate	nil
2023-05-10 21:58:09,619{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 27 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 10}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 10,
 :in_reply_to 10,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,620{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:generate	nil
2023-05-10 21:58:09,622{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 28 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 10}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 10,
 :in_reply_to 10,
 :node_id nil,
 :echo nil,
 :id 2199023255552}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,622{GMT}	INFO	[jepsen worker 1] jepsen.util: 31	:invoke	:generate	nil
2023-05-10 21:58:09,625{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 29 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 10}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 10,
 :in_reply_to 10,
 :node_id nil,
 :echo nil,
 :id 4398046511104}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,625{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 30 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 11}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 11,
 :in_reply_to 11,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,626{GMT}	INFO	[jepsen worker 2] jepsen.util: 32	:invoke	:generate	nil
2023-05-10 21:58:09,628{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:generate	nil
2023-05-10 21:58:09,628{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 31 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 11}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 11,
 :in_reply_to 11,
 :node_id nil,
 :echo nil,
 :id 4398046511104}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,629{GMT}	INFO	[jepsen worker 1] jepsen.util: 34	:invoke	:generate	nil
2023-05-10 21:58:09,632{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 32 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 11}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 11,
 :in_reply_to 11,
 :node_id nil,
 :echo nil,
 :id 8796093022208}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,633{GMT}	INFO	[jepsen worker 2] jepsen.util: 35	:invoke	:generate	nil
2023-05-10 21:58:09,634{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 33 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 12}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 12,
 :in_reply_to 12,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,635{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:generate	nil
2023-05-10 21:58:09,635{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 34 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 12}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 12,
 :in_reply_to 12,
 :node_id nil,
 :echo nil,
 :id 8796093022208}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,636{GMT}	INFO	[jepsen worker 1] jepsen.util: 37	:invoke	:generate	nil
2023-05-10 21:58:09,637{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 35 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 12}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 12,
 :in_reply_to 12,
 :node_id nil,
 :echo nil,
 :id 17592186044416}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,638{GMT}	INFO	[jepsen worker 2] jepsen.util: 38	:invoke	:generate	nil
2023-05-10 21:58:09,642{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 37 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 13}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 13,
 :in_reply_to 13,
 :node_id nil,
 :echo nil,
 :id 17592186044416}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,642{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 36 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 13}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 13,
 :in_reply_to 13,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,643{GMT}	INFO	[jepsen worker 1] jepsen.util: 40	:invoke	:generate	nil
2023-05-10 21:58:09,643{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 38 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 13}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 13,
 :in_reply_to 13,
 :node_id nil,
 :echo nil,
 :id 35184372088832}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,644{GMT}	INFO	[jepsen worker 2] jepsen.util: 41	:invoke	:generate	nil
2023-05-10 21:58:09,646{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:generate	nil
2023-05-10 21:58:09,648{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 40 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 14}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 14,
 :in_reply_to 14,
 :node_id nil,
 :echo nil,
 :id 35184372088832}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,648{GMT}	INFO	[jepsen worker 1] jepsen.util: 43	:invoke	:generate	nil
2023-05-10 21:58:09,649{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 41 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 14}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 14,
 :in_reply_to 14,
 :node_id nil,
 :echo nil,
 :id 70368744177664}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,650{GMT}	INFO	[jepsen worker 2] jepsen.util: 44	:invoke	:generate	nil
2023-05-10 21:58:09,652{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 39 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 14}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 14,
 :in_reply_to 14,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,652{GMT}	INFO	[jepsen worker 0] jepsen.util: 42	:invoke	:generate	nil
2023-05-10 21:58:09,653{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 43 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 15}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 15,
 :in_reply_to 15,
 :node_id nil,
 :echo nil,
 :id 70368744177664}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,654{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 44 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 15}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 15,
 :in_reply_to 15,
 :node_id nil,
 :echo nil,
 :id 140737488355328}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,654{GMT}	INFO	[jepsen worker 1] jepsen.util: 46	:invoke	:generate	nil
2023-05-10 21:58:09,655{GMT}	INFO	[jepsen worker 2] jepsen.util: 47	:invoke	:generate	nil
2023-05-10 21:58:09,658{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 42 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 15}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 15,
 :in_reply_to 15,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,659{GMT}	INFO	[jepsen worker 0] jepsen.util: 45	:invoke	:generate	nil
2023-05-10 21:58:09,660{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 46 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 16}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 16,
 :in_reply_to 16,
 :node_id nil,
 :echo nil,
 :id 140737488355328}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,660{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 47 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 16}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 16,
 :in_reply_to 16,
 :node_id nil,
 :echo nil,
 :id 281474976710656}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,661{GMT}	INFO	[jepsen worker 1] jepsen.util: 49	:invoke	:generate	nil
2023-05-10 21:58:09,663{GMT}	INFO	[jepsen worker 2] jepsen.util: 50	:invoke	:generate	nil
2023-05-10 21:58:09,663{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 45 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 16}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 16,
 :in_reply_to 16,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,664{GMT}	INFO	[jepsen worker 0] jepsen.util: 48	:invoke	:generate	nil
2023-05-10 21:58:09,665{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 49 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 17}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 17,
 :in_reply_to 17,
 :node_id nil,
 :echo nil,
 :id 281474976710656}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,666{GMT}	INFO	[jepsen worker 1] jepsen.util: 52	:invoke	:generate	nil
2023-05-10 21:58:09,668{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 50 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 17}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 17,
 :in_reply_to 17,
 :node_id nil,
 :echo nil,
 :id 562949953421312}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,669{GMT}	INFO	[jepsen worker 2] jepsen.util: 53	:invoke	:generate	nil
2023-05-10 21:58:09,670{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 48 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 17}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 17,
 :in_reply_to 17,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,670{GMT}	INFO	[jepsen worker 0] jepsen.util: 51	:invoke	:generate	nil
2023-05-10 21:58:09,672{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 52 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 18}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 18,
 :in_reply_to 18,
 :node_id nil,
 :echo nil,
 :id 562949953421312}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,673{GMT}	INFO	[jepsen worker 1] jepsen.util: 55	:invoke	:generate	nil
2023-05-10 21:58:09,674{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 53 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 18}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 18,
 :in_reply_to 18,
 :node_id nil,
 :echo nil,
 :id 1125899906842624}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,675{GMT}	INFO	[jepsen worker 2] jepsen.util: 56	:invoke	:generate	nil
2023-05-10 21:58:09,675{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 51 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 18}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 18,
 :in_reply_to 18,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,676{GMT}	INFO	[jepsen worker 0] jepsen.util: 54	:invoke	:generate	nil
2023-05-10 21:58:09,677{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 55 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 19}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 19,
 :in_reply_to 19,
 :node_id nil,
 :echo nil,
 :id 1125899906842624}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,678{GMT}	INFO	[jepsen worker 1] jepsen.util: 58	:invoke	:generate	nil
2023-05-10 21:58:09,680{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 56 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 19}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 19,
 :in_reply_to 19,
 :node_id nil,
 :echo nil,
 :id 2251799813685248}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,681{GMT}	INFO	[jepsen worker 2] jepsen.util: 59	:invoke	:generate	nil
2023-05-10 21:58:09,681{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 54 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 19}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 19,
 :in_reply_to 19,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,683{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:invoke	:generate	nil
2023-05-10 21:58:09,683{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 58 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 20}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 20,
 :in_reply_to 20,
 :node_id nil,
 :echo nil,
 :id 2251799813685248}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,684{GMT}	INFO	[jepsen worker 1] jepsen.util: 61	:invoke	:generate	nil
2023-05-10 21:58:09,685{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 59 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 20}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 20,
 :in_reply_to 20,
 :node_id nil,
 :echo nil,
 :id 4503599627370496}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,686{GMT}	INFO	[jepsen worker 2] jepsen.util: 62	:invoke	:generate	nil
2023-05-10 21:58:09,686{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 57 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 20}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 20,
 :in_reply_to 20,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,687{GMT}	INFO	[jepsen worker 0] jepsen.util: 60	:invoke	:generate	nil
2023-05-10 21:58:09,688{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 61 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 21}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 21,
 :in_reply_to 21,
 :node_id nil,
 :echo nil,
 :id 4503599627370496}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,688{GMT}	INFO	[jepsen worker 1] jepsen.util: 64	:invoke	:generate	nil
2023-05-10 21:58:09,691{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 62 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 21}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 21,
 :in_reply_to 21,
 :node_id nil,
 :echo nil,
 :id 9007199254740992}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,692{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 60 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 21}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 21,
 :in_reply_to 21,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,692{GMT}	INFO	[jepsen worker 2] jepsen.util: 65	:invoke	:generate	nil
2023-05-10 21:58:09,693{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:invoke	:generate	nil
2023-05-10 21:58:09,694{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 64 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 22}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 22,
 :in_reply_to 22,
 :node_id nil,
 :echo nil,
 :id 9007199254740992}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,695{GMT}	INFO	[jepsen worker 1] jepsen.util: 67	:invoke	:generate	nil
2023-05-10 21:58:09,697{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 65 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 22}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 22,
 :in_reply_to 22,
 :node_id nil,
 :echo nil,
 :id 18014398509481984}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,697{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 63 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 22}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 22,
 :in_reply_to 22,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,698{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:invoke	:generate	nil
2023-05-10 21:58:09,699{GMT}	INFO	[jepsen worker 2] jepsen.util: 68	:invoke	:generate	nil
2023-05-10 21:58:09,699{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 67 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 23}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 23,
 :in_reply_to 23,
 :node_id nil,
 :echo nil,
 :id 18014398509481984}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,700{GMT}	INFO	[jepsen worker 1] jepsen.util: 70	:invoke	:generate	nil
2023-05-10 21:58:09,702{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 66 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 23}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 23,
 :in_reply_to 23,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,703{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:invoke	:generate	nil
2023-05-10 21:58:09,703{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 68 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 23}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 23,
 :in_reply_to 23,
 :node_id nil,
 :echo nil,
 :id 36028797018963968}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,704{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 70 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 24}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 24,
 :in_reply_to 24,
 :node_id nil,
 :echo nil,
 :id 36028797018963968}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,704{GMT}	INFO	[jepsen worker 2] jepsen.util: 71	:invoke	:generate	nil
2023-05-10 21:58:09,706{GMT}	INFO	[jepsen worker 1] jepsen.util: 73	:invoke	:generate	nil
2023-05-10 21:58:09,709{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 71 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 24}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 24,
 :in_reply_to 24,
 :node_id nil,
 :echo nil,
 :id 72057594037927936}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,709{GMT}	INFO	[jepsen worker 2] jepsen.util: 74	:invoke	:generate	nil
2023-05-10 21:58:09,710{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 69 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 24}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 24,
 :in_reply_to 24,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,711{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 73 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 25}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 25,
 :in_reply_to 25,
 :node_id nil,
 :echo nil,
 :id 72057594037927936}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,711{GMT}	INFO	[jepsen worker 0] jepsen.util: 72	:invoke	:generate	nil
2023-05-10 21:58:09,712{GMT}	INFO	[jepsen worker 1] jepsen.util: 76	:invoke	:generate	nil
2023-05-10 21:58:09,713{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 74 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 25}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 25,
 :in_reply_to 25,
 :node_id nil,
 :echo nil,
 :id 144115188075855872}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,714{GMT}	INFO	[jepsen worker 2] jepsen.util: 77	:invoke	:generate	nil
2023-05-10 21:58:09,716{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 72 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 25}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 25,
 :in_reply_to 25,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,717{GMT}	INFO	[jepsen worker 0] jepsen.util: 75	:invoke	:generate	nil
2023-05-10 21:58:09,717{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 76 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 26}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 26,
 :in_reply_to 26,
 :node_id nil,
 :echo nil,
 :id 144115188075855872}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,718{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 77 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 26}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 26,
 :in_reply_to 26,
 :node_id nil,
 :echo nil,
 :id 288230376151711744}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,719{GMT}	INFO	[jepsen worker 1] jepsen.util: 79	:invoke	:generate	nil
2023-05-10 21:58:09,719{GMT}	INFO	[jepsen worker 2] jepsen.util: 80	:invoke	:generate	nil
2023-05-10 21:58:09,722{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 75 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 26}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 26,
 :in_reply_to 26,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,723{GMT}	INFO	[jepsen worker 0] jepsen.util: 78	:invoke	:generate	nil
2023-05-10 21:58:09,724{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 80 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 27}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 27,
 :in_reply_to 27,
 :node_id nil,
 :echo nil,
 :id 576460752303423488}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,725{GMT}	INFO	[jepsen worker 2] jepsen.util: 83	:invoke	:generate	nil
2023-05-10 21:58:09,726{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 79 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 27}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 27,
 :in_reply_to 27,
 :node_id nil,
 :echo nil,
 :id 288230376151711744}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,726{GMT}	INFO	[jepsen worker 1] jepsen.util: 82	:invoke	:generate	nil
2023-05-10 21:58:09,728{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 78 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 27}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 27,
 :in_reply_to 27,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,729{GMT}	INFO	[jepsen worker 0] jepsen.util: 81	:invoke	:generate	nil
2023-05-10 21:58:09,730{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 82 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 28}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 28,
 :in_reply_to 28,
 :node_id nil,
 :echo nil,
 :id 576460752303423488}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,730{GMT}	INFO	[jepsen worker 1] jepsen.util: 85	:invoke	:generate	nil
2023-05-10 21:58:09,731{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 83 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 28}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 28,
 :in_reply_to 28,
 :node_id nil,
 :echo nil,
 :id 1152921504606846976}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,732{GMT}	INFO	[jepsen worker 2] jepsen.util: 86	:invoke	:generate	nil
2023-05-10 21:58:09,733{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 81 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 28}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 28,
 :in_reply_to 28,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,733{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:generate	nil
2023-05-10 21:58:09,736{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 85 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 29}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 29,
 :in_reply_to 29,
 :node_id nil,
 :echo nil,
 :id 1152921504606846976}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,736{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 86 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 29}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 29,
 :in_reply_to 29,
 :node_id nil,
 :echo nil,
 :id 2305843009213693952}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,737{GMT}	INFO	[jepsen worker 1] jepsen.util: 88	:invoke	:generate	nil
2023-05-10 21:58:09,737{GMT}	INFO	[jepsen worker 2] jepsen.util: 89	:invoke	:generate	nil
2023-05-10 21:58:09,739{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 84 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 29}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 29,
 :in_reply_to 29,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,740{GMT}	INFO	[jepsen worker 0] jepsen.util: 87	:invoke	:generate	nil
2023-05-10 21:58:09,741{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 88 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 30}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 30,
 :in_reply_to 30,
 :node_id nil,
 :echo nil,
 :id 2305843009213693952}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,742{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 89 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 30}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 30,
 :in_reply_to 30,
 :node_id nil,
 :echo nil,
 :id 4611686018427387904}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,742{GMT}	INFO	[jepsen worker 1] jepsen.util: 91	:invoke	:generate	nil
2023-05-10 21:58:09,744{GMT}	INFO	[jepsen worker 2] jepsen.util: 92	:invoke	:generate	nil
2023-05-10 21:58:09,744{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 87 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 30}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 30,
 :in_reply_to 30,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,745{GMT}	INFO	[jepsen worker 0] jepsen.util: 90	:invoke	:generate	nil
2023-05-10 21:58:09,746{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 91 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 31}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 31,
 :in_reply_to 31,
 :node_id nil,
 :echo nil,
 :id 4611686018427387904}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,747{GMT}	INFO	[jepsen worker 1] jepsen.util: 94	:invoke	:generate	nil
2023-05-10 21:58:09,749{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 92 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 31}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 31,
 :in_reply_to 31,
 :node_id nil,
 :echo nil,
 :id 9223372036854775808}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,750{GMT}	INFO	[jepsen worker 2] jepsen.util: 95	:invoke	:generate	nil
2023-05-10 21:58:09,750{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 90 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 31}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 31,
 :in_reply_to 31,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,751{GMT}	INFO	[jepsen worker 0] jepsen.util: 93	:invoke	:generate	nil
2023-05-10 21:58:09,751{GMT}	WARN	[jepsen worker 1] jepsen.generator.interpreter: Process 94 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n1 the following request:

{:type "generate", :msg_id 32}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 32,
 :in_reply_to 32,
 :node_id nil,
 :echo nil,
 :id 9223372036854775808}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,752{GMT}	INFO	[jepsen worker 1] jepsen.util: 97	:invoke	:generate	nil
2023-05-10 21:58:09,755{GMT}	WARN	[jepsen worker 2] jepsen.generator.interpreter: Process 95 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n2 the following request:

{:type "generate", :msg_id 32}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 32,
 :in_reply_to 32,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,756{GMT}	INFO	[jepsen worker 2] jepsen.util: 98	:invoke	:generate	nil
2023-05-10 21:58:09,756{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 93 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "generate", :msg_id 32}

And expected a response of the form:

{:type (eq "generate_ok"), :id Any, {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:type "generate_ok",
 :msg_id 32,
 :in_reply_to 32,
 :node_id nil,
 :echo nil,
 :id 0}

This is malformed because:

{:node_id disallowed-key, :echo disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$fn__20063$generate_BANG___20064.invoke(unique_ids.clj:31)
	at maelstrom.workload.unique_ids$client$reify__20074.invoke_BANG_(unique_ids.clj:52)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-10 21:58:09,757{GMT}	INFO	[jepsen worker 0] jepsen.util: 96	:invoke	:generate	nil
2023-05-10 21:58:14,752{GMT}	INFO	[jepsen worker 1] jepsen.util: 97	:info	:generate	nil	:net-timeout
2023-05-10 21:58:14,753{GMT}	INFO	[jepsen worker 1] jepsen.util: 100	:invoke	:generate	nil
2023-05-10 21:58:14,755{GMT}	INFO	[jepsen worker 2] jepsen.util: 98	:info	:generate	nil	:net-timeout
2023-05-10 21:58:14,756{GMT}	INFO	[jepsen worker 2] jepsen.util: 101	:invoke	:generate	nil
2023-05-10 21:58:14,756{GMT}	INFO	[jepsen worker 0] jepsen.util: 96	:info	:generate	nil	:net-timeout
2023-05-10 21:58:14,758{GMT}	INFO	[jepsen worker 0] jepsen.util: 99	:invoke	:generate	nil
2023-05-10 21:58:19,753{GMT}	INFO	[jepsen worker 1] jepsen.util: 100	:info	:generate	nil	:net-timeout
2023-05-10 21:58:19,754{GMT}	INFO	[jepsen worker 1] jepsen.util: 103	:invoke	:generate	nil
2023-05-10 21:58:19,756{GMT}	INFO	[jepsen worker 2] jepsen.util: 101	:info	:generate	nil	:net-timeout
2023-05-10 21:58:19,756{GMT}	INFO	[jepsen worker 2] jepsen.util: 104	:invoke	:generate	nil
2023-05-10 21:58:19,757{GMT}	INFO	[jepsen worker 0] jepsen.util: 99	:info	:generate	nil	:net-timeout
2023-05-10 21:58:19,758{GMT}	INFO	[jepsen worker 0] jepsen.util: 102	:invoke	:generate	nil
2023-05-10 21:58:24,757{GMT}	INFO	[jepsen worker 1] jepsen.util: 103	:info	:generate	nil	:net-timeout
2023-05-10 21:58:24,757{GMT}	INFO	[jepsen worker 2] jepsen.util: 104	:info	:generate	nil	:net-timeout
2023-05-10 21:58:24,757{GMT}	INFO	[jepsen worker 2] jepsen.util: 107	:invoke	:generate	nil
2023-05-10 21:58:24,757{GMT}	INFO	[jepsen worker 1] jepsen.util: 106	:invoke	:generate	nil
2023-05-10 21:58:24,758{GMT}	INFO	[jepsen worker 0] jepsen.util: 102	:info	:generate	nil	:net-timeout
2023-05-10 21:58:24,759{GMT}	INFO	[jepsen worker 0] jepsen.util: 105	:invoke	:generate	nil
2023-05-10 21:58:28,096{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	nil
2023-05-10 21:58:28,097{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	:network-healed
2023-05-10 21:58:29,758{GMT}	INFO	[jepsen worker 2] jepsen.util: 107	:info	:generate	nil	:net-timeout
2023-05-10 21:58:29,758{GMT}	INFO	[jepsen worker 1] jepsen.util: 106	:info	:generate	nil	:net-timeout
2023-05-10 21:58:29,759{GMT}	INFO	[jepsen worker 2] jepsen.util: 110	:invoke	:generate	nil
2023-05-10 21:58:29,759{GMT}	INFO	[jepsen worker 0] jepsen.util: 105	:info	:generate	nil	:net-timeout
2023-05-10 21:58:29,760{GMT}	INFO	[jepsen worker 0] jepsen.util: 108	:invoke	:generate	nil
2023-05-10 21:58:29,760{GMT}	INFO	[jepsen worker 1] jepsen.util: 109	:invoke	:generate	nil
2023-05-10 21:58:34,759{GMT}	INFO	[jepsen worker 2] jepsen.util: 110	:info	:generate	nil	:net-timeout
2023-05-10 21:58:34,760{GMT}	INFO	[jepsen worker 1] jepsen.util: 109	:info	:generate	nil	:net-timeout
2023-05-10 21:58:34,760{GMT}	INFO	[jepsen worker 0] jepsen.util: 108	:info	:generate	nil	:net-timeout
2023-05-10 21:58:34,760{GMT}	INFO	[jepsen worker 2] jepsen.util: 113	:invoke	:generate	nil
2023-05-10 21:58:34,761{GMT}	INFO	[jepsen worker 0] jepsen.util: 111	:invoke	:generate	nil
2023-05-10 21:58:34,763{GMT}	INFO	[jepsen worker 1] jepsen.util: 112	:invoke	:generate	nil
2023-05-10 21:58:39,761{GMT}	INFO	[jepsen worker 2] jepsen.util: 113	:info	:generate	nil	:net-timeout
2023-05-10 21:58:39,761{GMT}	INFO	[jepsen worker 0] jepsen.util: 111	:info	:generate	nil	:net-timeout
2023-05-10 21:58:39,763{GMT}	INFO	[jepsen worker 1] jepsen.util: 112	:info	:generate	nil	:net-timeout
2023-05-10 21:58:39,780{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2023-05-10 21:58:39,892{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2023-05-10 21:58:39,892{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2023-05-10 21:58:39,892{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2023-05-10 21:58:40,765{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2023-05-10 21:58:40,766{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n2 crashed with exit status 101. Before crashing, it wrote to STDOUT:

{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":1,"in_reply_to":1,"node_id":null,"echo":null,"id":8589934592}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":2,"in_reply_to":2,"node_id":null,"echo":null,"id":17179869184}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":3,"in_reply_to":3,"node_id":null,"echo":null,"id":34359738368}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":4,"in_reply_to":4,"node_id":null,"echo":null,"id":68719476736}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":5,"in_reply_to":5,"node_id":null,"echo":null,"id":137438953472}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":6,"in_reply_to":6,"node_id":null,"echo":null,"id":274877906944}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":7,"in_reply_to":7,"node_id":null,"echo":null,"id":549755813888}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":8,"in_reply_to":8,"node_id":null,"echo":null,"id":1099511627776}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":9,"in_reply_to":9,"node_id":null,"echo":null,"id":2199023255552}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":10,"in_reply_to":10,"node_id":null,"echo":null,"id":4398046511104}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":11,"in_reply_to":11,"node_id":null,"echo":null,"id":8796093022208}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":12,"in_reply_to":12,"node_id":null,"echo":null,"id":17592186044416}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":13,"in_reply_to":13,"node_id":null,"echo":null,"id":35184372088832}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":14,"in_reply_to":14,"node_id":null,"echo":null,"id":70368744177664}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":15,"in_reply_to":15,"node_id":null,"echo":null,"id":140737488355328}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":16,"in_reply_to":16,"node_id":null,"echo":null,"id":281474976710656}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":17,"in_reply_to":17,"node_id":null,"echo":null,"id":562949953421312}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":18,"in_reply_to":18,"node_id":null,"echo":null,"id":1125899906842624}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":19,"in_reply_to":19,"node_id":null,"echo":null,"id":2251799813685248}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":20,"in_reply_to":20,"node_id":null,"echo":null,"id":4503599627370496}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":21,"in_reply_to":21,"node_id":null,"echo":null,"id":9007199254740992}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":22,"in_reply_to":22,"node_id":null,"echo":null,"id":18014398509481984}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":23,"in_reply_to":23,"node_id":null,"echo":null,"id":36028797018963968}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":24,"in_reply_to":24,"node_id":null,"echo":null,"id":72057594037927936}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":25,"in_reply_to":25,"node_id":null,"echo":null,"id":144115188075855872}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":26,"in_reply_to":26,"node_id":null,"echo":null,"id":288230376151711744}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":27,"in_reply_to":27,"node_id":null,"echo":null,"id":576460752303423488}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":28,"in_reply_to":28,"node_id":null,"echo":null,"id":1152921504606846976}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":29,"in_reply_to":29,"node_id":null,"echo":null,"id":2305843009213693952}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":30,"in_reply_to":30,"node_id":null,"echo":null,"id":4611686018427387904}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":31,"in_reply_to":31,"node_id":null,"echo":null,"id":9223372036854775808}}
{"src":"n2","dest":"c6","body":{"type":"generate_ok","msg_id":32,"in_reply_to":32,"node_id":null,"echo":null,"id":0}}

And to STDERR:

thread 'main' panicked at 'attempt to shift left with overflow', src/main.rs:60:26
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

Full STDERR logs are available in /home/eman/gossip-glomers/maelstrom/store/unique-ids/20230510T215807.959-0400/node-logs/n2.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16142.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__8744$G__8725__8748.invoke(db.clj:12)
	at jepsen.db$fn__8744$G__8724__8753.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:833)
